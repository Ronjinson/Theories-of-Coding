import numpy as np

def optimized_metropolis_hastings(target_density, proposal_width, steps, start):
    samples = np.zeros(steps)
    current = start

    for i in range(steps):
        proposed = current + np.random.normal(0, proposal_width)
        acceptance_ratio = target_density(proposed) / target_density(current)
        if np.random.rand() < acceptance_ratio:
            current = proposed
        samples[i] = current
    
    return samples

target_density = lambda x: np.exp(-0.5 * x ** 2) / np.sqrt(2 * np.pi)
samples = optimized_metropolis_hastings(target_density, proposal_width=1, steps=10000, start=0)
