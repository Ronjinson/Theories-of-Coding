from scipy.stats import qmc

def optimized_quasi_monte_carlo_integration(func, dimension, num_samples):
    sampler = qmc.Sobol(d=dimension, scramble=True)
    samples = sampler.random(num_samples)
    values = func(samples)
    return np.mean(values) * (1 ** dimension)

# Define function to integrate (optimized to handle vector input directly)
func = lambda x: np.sum(x ** 2, axis=1)
result = optimized_quasi_monte_carlo_integration(func, dimension=2, num_samples=1024)
